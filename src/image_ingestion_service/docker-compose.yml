# version: "3.9"

services:
  image-receiver:
    container_name: image-receiver-drivebc-image
    build: ./image_receiver
    ports:
      - "8000:8000"
    environment:
      - RABBITMQ_URL=${RABBITMQ_URL}
      - CAMERA_IP_MAPPING=${CAMERA_IP_MAPPING}
      - LOCATION_USER_PASS_MAPPING=${LOCATION_USER_PASS_MAPPING}
      - CAMERA_LOCATION_MAPPING=${CAMERA_LOCATION_MAPPING}
      - FTP_HOST=${FTP_HOST}
      - FTP_PORT=${FTP_PORT}
      - FTP_USER_NAME=${FTP_USER}
      - FTP_USER_PASS=${FTP_PASS}
      - FTP_USER_HOME=/home/test
      - DB_SERVER=${DB_SERVER}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}

  image-processor:
    container_name: image-processor-drivebc-image
    build:
      context: ./image_processor
    ports:
      - "8080:8080"  # ReplayTheDay will hit this API
    environment:
      - S3_BUCKET=${S3_BUCKET}
      - S3_REGION=${S3_REGION}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL}  # Optional, if using MinIO or custom S3-compatible storage
      - RABBITMQ_URL=${RABBITMQ_URL}
      - REDIS_URL=${REDIS_URL}
      - DB_SERVER=${DB_SERVER}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      # - rabbitmq
      - minio
      - redis
    volumes:
      - pvc-data:/app/data  # For PVC style storage

  minio:
    image: minio/minio:latest
    # command: server /data
    command: server --console-address ":9001" /data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

volumes:
  minio-data:
  pvc-data:

  

  



