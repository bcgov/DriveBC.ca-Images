# version: "3.9"

services:
  image-receiver:
    container_name: image-receiver-drivebc-image
    build: ./image_receiver
    ports:
      - "8000:8000"
    environment:
      - RABBITMQ_URL=${RABBITMQ_URL}
      - CAMERA_IP_MAPPING=${CAMERA_IP_MAPPING}
      - LOCATION_USER_PASS_MAPPING=${LOCATION_USER_PASS_MAPPING}
      - CAMERA_LOCATION_MAPPING=${CAMERA_LOCATION_MAPPING}
      - FTP_HOST=${FTP_HOST}
      - FTP_PORT=${FTP_PORT}
      - FTP_USER_NAME=${FTP_USER}
      - FTP_USER_PASS=${FTP_PASS}
      - FTP_USER_HOME=/home/test
      - DB_SERVER=${DB_SERVER}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}

    # networks:
    #   - internal-network
    #   - external-sql-network
  
  # ftp-server:
  #   container_name: ftp-server-drivebc-image
  #   image: stilliard/pure-ftpd
  #   ports:
  #     - "21:21"
  #   environment:
  #     - FTP_HOST=${FTP_HOST}
  #     - FTP_PORT=${FTP_PORT}
  #     - FTP_USER_NAME=${FTP_USER}
  #     - FTP_USER_PASS=${FTP_PASS}
  #     - FTP_USER_HOME=/home/test
  #   volumes:
  #     - ./ftp-data:/home/test
  #   networks:
  #     - internal-network

  # redis:
  #   image: "redis:6.2"
  #   container_name: redis-drivebc-image
  #   restart: unless-stopped
  #   command: redis-server --appendonly yes
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - internal-network
  
  # consumer:
  #   container_name: consumer-drivebc-image
  #   build:
  #     context: ./consumer
  #   environment:
  #     - RABBITMQ_URL=${RABBITMQ_URL}

  consumer-drivebc:
    container_name: consumer-drivebc-drivebc-image
    build:
      context: ./consumer_drivebc
    environment:
      - RABBITMQ_URL=${RABBITMQ_URL}

# networks:
#   internal-network:
#       driver: bridge

#   external-sql-network:
#     external: true
#     name: ${DB_NETWORK}

  

  



