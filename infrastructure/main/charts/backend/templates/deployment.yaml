{{- $deploymentTag := .Values.image.tag | default .Chart.AppVersion -}}
{{- $deploymentTime := now | date "2006-01-02 15:04:05.000000" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "app.fullname" . }}
  labels: {{ include "app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 8 }}
  template:
    metadata:
      labels:
        {{ include "app.selectorLabels" . | nindent 8 }}
      annotations:
        prometheus.io/port: '8000' 
        prometheus.io/scrape: 'true'  
        prometheus.io/path: "/api/metrics"
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/agent-inject-secret-secrets.env: {{ .Values.global.vault.licenceplate }}-{{ .Values.global.vault.environment}}/{{ .Values.vault.secretName }}
        vault.hashicorp.com/agent-inject-template-secrets.env: |
          {{`{{- with secret `}}"{{ .Values.global.vault.licenceplate }}-{{ .Values.global.vault.environment }}/{{ .Values.vault.secretName }}"{{` }}
          {{- range $key, $value := .Data.data }}
          export {{$key}}="{{$value}}"
          {{- end }}
          {{- end `}} }}
        vault.hashicorp.com/agent-inject-token: 'false'
        vault.hashicorp.com/agent-pre-populate-only: 'true'
        vault.hashicorp.com/auth-path: {{ .Values.vault.authPath }}
        vault.hashicorp.com/namespace: platform-services
        vault.hashicorp.com/role: {{ .Values.global.vault.licenceplate }}-{{ .Values.global.vault.environment}}
    spec:
      containers:
        - name: {{ template "app.fullname" . }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          ports:
            - containerPort: 8000
              protocol: TCP
          resources:
            requests:
              cpu: {{ .Values.deployment.resources.requests.cpu }}
              memory: {{ .Values.deployment.resources.requests.memory }}
            limits:
              memory: {{ .Values.deployment.resources.limits.memory }}
          env:
            - name: DEPLOYMENT_TAG
              value: {{ $deploymentTag | quote }}
            - name: DEPLOYMENT_TIME
              value: {{ $deploymentTime | quote }}
            - name: RELEASE
              value: {{ .Values.global.release }}
            {{- range $key, $value := .Values.deployment.env.variables }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          command:
            - sh
            - -c
          args:
            - . /vault/secrets/secrets.env && exec uvicorn app.main:app --host 0.0.0.0 --port 8000
          readinessProbe:
            httpGet:
              path: /api/healthz
              port: 8000
              httpHeaders:
              - name: Accept
                value: application/json
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /api/healthz
              port: 8000
              httpHeaders:
              - name: Accept
                value: application/json
            initialDelaySeconds: 15
            periodSeconds: 20
            failureThreshold: 3
      serviceAccountName: {{ .Values.global.vault.licenceplate }}-vault
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: "app.kubernetes.io/instance"
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: {{ template "app.name" . }}
