name: 1. Build & Deploy to Dev
# Based on: https://docs.github.com/en/actions/use-cases-and-examples/publishing-packages/publishing-docker-images

#Will automatically run on a push to main, but can also be run manually
on:
  push:
    branches: [ "main" ]
    paths-ignore:
    - '.github/**'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  BACKEND_IMAGE_NAME: ${{ github.repository }}-backend
  FRONTEND_IMAGE_NAME: ${{ github.repository }}-frontend

jobs:
  build-and-push-frontend:
    runs-on: ubuntu-latest
    name: Build & Push Frontend Image
    environment: dev
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
    
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=raw,value=latest-dev
            type=sha,format=long

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./compose/frontend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


  build-and-push-backend:
    runs-on: ubuntu-latest
    name: Build & Push Backend Image
    environment: dev
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
    
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=raw,value=latest-dev
            type=sha,format=long

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./compose/image_receiver/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  update-openshift-gold:
    needs: [build-and-push-frontend, build-and-push-backend]
    runs-on: ubuntu-latest
    name: Deploy Latest Images to OpenShift Gold
    environment:
      name: dev
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    - name: Install CLI tools from OpenShift Mirror
      uses: redhat-actions/openshift-tools-installer@v1
      with:
        oc: "4"
        skip_cache: true
      
    - name: Authenticate and set context
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: ${{ vars.OPENSHIFT_GOLD_SERVER }}
        openshift_token: ${{ secrets.OPENSHIFT_GOLD_TOKEN }}
        namespace: ${{ vars.OPENSHIFT_NAMESPACE }}
        insecure_skip_tls_verify: false
    - name: Helm upgrade on OpenShift Gold Environment
      run: |
        helm upgrade dev-image-ingestion-service -f ./infrastructure/main/values-dev.yaml ./infrastructure/main --set frontend.image.tag="sha-${{ github.sha }}" --set backend.image.tag="sha-${{ github.sha }}"

  update-openshift-golddr:
    needs: [build-and-push-frontend, build-and-push-backend]
    runs-on: ubuntu-latest
    name: Deploy Latest Images to OpenShift GoldDR
    environment:
      name: dev
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Install CLI tools from OpenShift Mirror
      uses: redhat-actions/openshift-tools-installer@v1
      with:
        oc: "4"
        skip_cache: true
     
    - name: Authenticate and set context
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: ${{ vars.OPENSHIFT_GOLDDR_SERVER }}
        openshift_token: ${{ secrets.OPENSHIFT_GOLDDR_TOKEN }}
        namespace: ${{ vars.OPENSHIFT_NAMESPACE }}
        insecure_skip_tls_verify: false

    - name: Helm upgrade on OpenShift GoldDR Environment
      run: |
        helm upgrade dev-image-ingestion-service -f ./infrastructure/main/values-dev.yaml -f ./infrastructure/main/values-dev-dr.yaml ./infrastructure/main --set frontend.image.tag="sha-${{ github.sha }}" --set backend.image.tag="sha-${{ github.sha }}"